@model System.Int32
@{
    /*
        additionalViewData definitions
            Help - Help text that displays as a tool tip
            Icon - Name of glyph from http://getbootstrap.com/components/#glyphicons to show at end of text edit field
            InputControl - string for input control
     */

    string lsInputClass = string.Empty;
    if (!ViewData.ModelState.IsValidField(ViewData.TemplateInfo.HtmlFieldPrefix))
    {
        lsInputClass = "has-error";
    }

    string lsHelp = string.Empty;
    string lsIcon = "question-sign";
    if (ViewData.ModelMetadata.IsRequired)
    {
        lsIcon = "asterisk";
        lsHelp = "Required";
    }

    if (null != ViewData["Help"] && ViewData["Help"] is string)
    {
        lsHelp = (string)ViewData["Help"];
    }

    if (null != ViewData["Icon"] && ViewData["Icon"] is string)
    {
        lsIcon = (string)ViewData["Icon"];
    }

    if (!string.IsNullOrEmpty(lsHelp))
    {
        lsInputClass += " input-group";
    }

    IHtmlString lsInputControl = null;
    if (null != ViewData["InputControl"] && ViewData["InputControl"] is IHtmlString)
    {
        lsInputControl = (IHtmlString)ViewData["InputControl"];
    }
}
<div class="@lsInputClass">
    @if (null != lsInputControl)
    {
        @lsInputControl
    }
    else
    {
    <input class="form-control" id="@ViewData.TemplateInfo.GetFullHtmlFieldId(string.Empty)" name="@ViewData.TemplateInfo.GetFullHtmlFieldName(string.Empty)" type="number" value="@Model" />
    }

    @if (!string.IsNullOrEmpty(lsHelp))
    {
    <span class="tooltipactive btn input-group-addon" data-placement="left" data-toggle="tooltip" title="@lsHelp">
        <span class="glyphicon glyphicon-@lsIcon"></span></span>
    }
</div>
@if (null != ViewData.ModelState[ViewData.TemplateInfo.HtmlFieldPrefix])
{
    foreach (var loError in ViewData.ModelState[ViewData.TemplateInfo.HtmlFieldPrefix].Errors)
    {
        <span class="help-block">@loError.ErrorMessage</span>
    }
}