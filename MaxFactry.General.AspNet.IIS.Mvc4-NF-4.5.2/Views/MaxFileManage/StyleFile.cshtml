@model MaxFactry.General.AspNet.PresentationLayer.MaxStyleFileViewModel
@{
    Html.MaxIncludeClientTool("JQuery");
    Html.MaxIncludeClientTool("Require");
}

@section StyleSection
{
    <style>
        #udCodeContent {
            position: relative;
            top: 0;
            right: 0;
            bottom: 0;
            left: 50px;
        }
    </style>


}
@section ScriptSection
{
    <script>
        requirejs.config({
            //By default load any module IDs from js/lib
            baseUrl: '//s.dns9.co/ct/ace',
            "paths": {
                "ace": "//s.dns9.co/ct/ace/ace"
            }
        });

        requirejs(['ace'], function (ace) {
            var editor = ace.edit("udCodeContent");
            editor.setFontSize('12px');
            editor.setOptions({
                maxLines: 30,
                minLines: 10
            });
            editor.resize();
            editor.setTheme("theme/chrome_razor");
            editor.getSession().setMode("mode/css");
            editor.setValue(jQuery('#Content').val());
            editor.getSession().on('change', function (e) {
                jQuery('#Content').val(editor.getValue());
            });

        });

    </script>

}

<h1>Style File Management</h1>
<div>@ViewBag.Message</div>

@{
    var loList = Model.GetSortedList();

    if (loList.Count > 0)
{
    <table class="table-bordered table-condensed">
        <thead>
            <tr>
                <th>Action</th>
                <th>Name</th>
                <th>Version</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var loView in loList)
            {
                <tr>
                    <td>@Html.ActionLink("Edit", "StyleFileEdit", "MaxFileManage", new RouteValueDictionary { { "id", loView.Id } }, new Dictionary<string, object> { { "class", "btn btn-default" } })</td>
                    <td>@loView.Name</td>
                    <td>@loView.FileVersion</td>
                </tr>
            }
        </tbody>
    </table>
}
}
<div class="row">
    @using (Html.BeginForm("StyleFileEdit", "MaxFileManage", FormMethod.Post, new Dictionary<string, object> { { "role", "form" }, { "class", "form-horizontal" } }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary()
        <fieldset>
            <legend>Add Style File</legend>
            @Html.EditorFor(m => m.Name, additionalViewData: new { LabelColumnWidth = 1 })
            @Html.EditorFor(m => m.FileVersion, additionalViewData: new { LabelColumnWidth = 1 })
            <div class="row">

                <div class="form-group">
                    <label class="control-label col-sm-1" for="Content">Content</label>
                    <div class="col-sm-11">
                        <textarea id='udCodeContent'></textarea>
                        @Html.TextAreaFor(m => m.Content, new Dictionary<string, object> { { "class", "form-control" }, { "style", "display:none;" } })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-offset-1 col-sm-4">
                    <div class="input-group">
                        <button type="submit" name="uoProcess" value="@MaxManageController.ProcessCancel" class="btn btn-default">Cancel</button>
                        <button type="submit" name="uoProcess" value="@MaxManageController.ProcessSave" class="btn btn-primary">Create</button>
                    </div>
                </div>
            </div>
        </fieldset>        
    }
</div>